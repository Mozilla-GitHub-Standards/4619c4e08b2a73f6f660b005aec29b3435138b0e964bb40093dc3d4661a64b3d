#!/bin/sh
# vim: ft=sh

cd $(dirname $0)
BASE=$(pwd)
SPEC_REPO_DIR=$BASE/nodejs-rpm
BUILD_DIR=$BASE/BUILD
SPEC_REPO='https://github.com/mozilla-services/nodejs-rpm.git'

# how this script works: 
#
# 1. it will pull down and update the latest specs from $SPEC_REPO
# 2. it will attempt to checkout the provided version, which is a 
#    tag in $SPEC_REPO
# 3. it will copy the spec file to the build directory
# 4. it will create an SRPM for mock
# 5. done

function logmsg { echo "$(date '+%Y %m %d %H:%M:%S') $@"; }
function logerr { echo "$@" >&2; }

function sanityCheck
{
    if [ -z $(command -v mock) ]; then
        logerr "ERROR: mock command not found"
        exit 1
    fi

    groups | grep -qi mock
    if [ $? != 0 ]; then
        logerr "ERROR: Not part of the mock group"
        exit 1
    fi
}

function ensureRepoExists
{
    if [ ! -e $SPEC_REPO_DIR ]; then
        mkdir $SPEC_REPO_DIR
        git clone $SPEC_REPO $SPEC_REPO_DIR
    fi

    # dir is there, but the files are not ... basic check
    if [ ! -e $SPEC_REPO_DIR/.git ]; then
        rm -rf $SPEC_REPO_DIR
        ensureRepoExists
    fi
}

function checkoutTag
{
    TAG=$1
    cd $SPEC_REPO_DIR

    # make sure the repo is clean...
    git clean -fdx . &> /dev/null
    git fetch --tags

    GIT_HASH=$(git rev-parse --verify --quiet --short $TAG);

    if [ -z $GIT_HASH ]; then
        logerr "Version: $TAG not found"
        logerr "Available Version:"
        git tag | sort --version-sort --reverse | sed 's/^/    /' >&2
        exit 1
    else
        git checkout $TAG &> /dev/null
    fi
}

function buildSRPM
{
    VERSION="$1"
    PACKAGE_NAME="nodejs-$(echo $VERSION | sed 's/v//')-1.el6.src.rpm"
    FILENAME="$BUILD_DIR/SRPMS/$PACKAGE_NAME"

    if [ ! -e $BUILD_DIR/SRPMS/$PACKAGE_NAME ]; then

        checkoutTag $VERSION

        for d in SOURCES SPECS RPMS SRPMS
        do
            if [ ! -e $BUILD_DIR/$d ]; then
                mkdir -p $BUILD_DIR/$d
            fi
        done

        cp $SPEC_REPO_DIR/nodejs.spec $BUILD_DIR/SPECS
        cp $SPEC_REPO_DIR/*.patch $BUILD_DIR/SOURCES

        SRC_ARCHIVE="http://nodejs.org/dist/${VERSION}/node-${VERSION}.tar.gz"
        logmsg "Fetching $SRC_ARCHIVE"

        curl --silent --fail "$SRC_ARCHIVE" -o "$BUILD_DIR/SOURCES/node-${VERSION}.tar.gz"

        if [ $? -gt 0 ]; then
            logerr "ERROR: Failed to fetch $SRC_ARCHIVE"
            exit 1
        fi

        logmsg "Building SRPM"
        mock --quiet \
            --buildsrpm \
            --root epel-6-x86_64 \
            --spec $BUILD_DIR/SPECS/nodejs.spec \
            --sources $BUILD_DIR/SOURCES \
            --resultdir $BUILD_DIR/SRPMS

        if [ $? -gt 0 ]; then
            logerr "Mock build error"
            exit 1
        fi
    else
        logmsg "$PACKAGE_NAME already exists... skipping SRPM build"
    fi
}

function buildRPM
{
    logmsg "Building Node.js RPM"
    mock --quiet \
        --root epel-6-x86_64 \
        --resultdir $BUILD_DIR/RPMS \
        $BUILD_DIR/SRPMS/$PACKAGE_NAME
}

NODE_VERSION=$1

sanityCheck
ensureRepoExists
buildSRPM $NODE_VERSION
buildRPM
